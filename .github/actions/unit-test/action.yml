name: Instrumentation unit tests
description: Run all the instrumentation unit test.
inputs:
  java-version:
    description: 'The JVM Version to use'
    required: true
    default: '8'
  codecov-token:
    description: 'The CODECOV TOKEN'

runs:
  using: composite

  steps:
    - name: Run instrumentation unit tests on Java ${{ inputs.java-version }} attempt 1
      id: run_tests_1
      shell: bash
      continue-on-error: true
      run: |
        echo "Running attempt 1"
        ./gradlew ${GRADLE_OPTIONS} --info test -Ptest${{ inputs.java-version }} --continue

    - name: Run instrumentation unit tests on Java ${{ inputs.java-version }} attempt 2
      id: run_tests_2
      shell: bash
      continue-on-error: true
      if: steps.run_tests_1.outcome == 'failure'
      run: |
        echo "Running attempt 2"
        ./gradlew ${GRADLE_OPTIONS} --info test -Ptest${{ inputs.java-version }} --continue

    - name: Run instrumentation unit tests on Java ${{ inputs.java-version }} attempt 3
      id: run_tests_3
      shell: bash
      continue-on-error: true
      if: steps.run_tests_2.outcome == 'failure'
      run: |
        echo "Running attempt 3"
        ./gradlew ${GRADLE_OPTIONS} --info test -Ptest${{ inputs.java-version }} --continue

    - name: Run instrumentation unit tests on Java ${{ inputs.java-version }} attempt 4
      id: run_tests_4
      shell: bash
      if: steps.run_tests_3.outcome == 'failure'
      run: |
        echo "Running attempt 4"
        ./gradlew ${GRADLE_OPTIONS} --info test -Ptest${{ inputs.java-version }} --continue

    - name: Upload coverage to Codecov
      if: matrix.java-version == '8'
      uses: codecov/codecov-action@v3
      with:
        token: ${{ inputs.codecov-token }}
        files: '**/build/reports/jacoco/test/jacocoTestReport.xml'
        fail_ci_if_error: false #default is false, but being explicit about what to expect.
        verbose: true

    - name: Capture Jacoco reports
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-reports-java-${{ matrix.java-version }}
        path: |
          **/build/reports/jacoco/**

    - name: Capture build reports
      # If previous step fails, run this step regardless
      if: ${{ failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: unit-tests-results-java-${{ matrix.java-version }}
        # The regex for the path below will capture unit test HTML reports generated by gradle for all
        # related modules: (newrelic-security-agent, newrelic-security-api, etc).
        # However, it's critical that the previous build step does a ./gradlew clean or the regex will capture test reports
        # that were leftover in unrelated modules for the instrumentation tests.
        path: |
          **/build/reports/tests/*
/**
 * VulnerabilityCaseType.java
 * <p>
 * Copyright (C) 2017 - k2 Cyber Security, Inc. All rights reserved.
 * <p>
 * This software is proprietary information of k2 Cyber Security, Inc and
 * constitutes valuable trade secrets of k2 Cyber Security, Inc. You shall
 * not disclose this information and shall use it only in accordance with the
 * terms of License.
 * <p>
 * K2 CYBER SECURITY, INC MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE
 * SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT
 * NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE, OR NON-INFRINGEMENT. K2 CYBER SECURITY, INC SHALL
 * NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING,
 * MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.
 * <p>
 * "K2 Cyber Security, Inc"
 */
package com.newrelic.api.agent.security.schema;

/**
 * Enum to contain all type of vulnerabilities.
 *
 * @version 1.0
 *
 */
public enum VulnerabilityCaseType {
    /** system command. */
    APP_INFO("APP_INFO"),
    /** system command. */
    SYSTEM_COMMAND("SYSTEM_COMMAND"),
    /** system exit. */
    SYSTEM_EXIT("SYSTEM_EXIT"),
    /** file operation. */
    FILE_OPERATION("FILE_OPERATION"),
    /** SQL db command. */
    SQL_DB_COMMAND("SQL_DB_COMMAND"),
    /** No db command. */
    NOSQL_DB_COMMAND("NOSQL_DB_COMMAND"),
    /** DynamoDB command. */
    DYNAMO_DB_COMMAND("DYNAMO_DB_COMMAND"),
    /** dynamic class loading. */
    DYNAMIC_CLASS_LOADING("DYNAMIC_CLASS_LOADING"),
    /** http request */
    HTTP_REQUEST("HTTP_REQUEST"),
    /** code_injection */
    CODE_INJECTION("CODE_INJECTION"),
    /** ldap */
    LDAP("LDAP"),
    /** hash*/
    HASH("HASH"),
    /** x-path*/
    XPATH("XPATH"),
    /** crypto*/
    CRYPTO("CRYPTO"),
    /** random*/
    RANDOM("RANDOM"),
    /** trustboundary*/
    TRUSTBOUNDARY("TRUSTBOUNDARY"),
    /** reflected xss*/
    REFLECTED_XSS("REFLECTED_XSS"),
    /** file_integrity */
    FILE_INTEGRITY("FILE_INTEGRITY"),
    /** Secure_cookie */
    SECURE_COOKIE("SECURE_COOKIE"),
    /** JavaScript Injection */
    JAVASCRIPT_INJECTION("JAVASCRIPT_INJECTION"),
    /** JavaScript Injection */
    XQUERY_INJECTION("XQUERY_INJECTION"),

    CACHING_DATA_STORE("CACHING_DATA_STORE");


    /** case type. */
    private String caseType;

    /**
     * Instantiates a new vulnerability case type.
     *
     * @param caseType the case type, type of vulnerability
     */
    private VulnerabilityCaseType(String caseType) {
        this.setCaseType(caseType);
    }

    /**
     * Gets the case type.
     *
     * @return the caseType, type of vulnerability
     */
    public String getCaseType() {
        return caseType;
    }

    /**
     * Sets the case type.
     *
     * @param caseType the caseType to set
     */
    public void setCaseType(String caseType) {
        this.caseType = caseType;
    }

    /*
     * (non-Javadoc)
     *
     * @see java.lang.Enum#toString()
     */
    @Override
    public String toString() {
        return this.caseType;
    }
}

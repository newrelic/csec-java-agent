import com.newrelic.agent.instrumentation.verify.VerifyTask

subprojects {

    // the version of all instrumentation-security projects.
    version = 1.0

    // pull in shared instrumentation build logic
    apply from: "$rootProject.projectDir/gradle/script/instrumentation.gradle"

    tasks.withType(Test) { task ->
        task.enabled = !project.hasProperty('noInstrumentation')
    }

    tasks.withType(AbstractArchiveTask) {
        preserveFileTimestamps = false
        reproducibleFileOrder = true
    }

    // prevents caching of verify instrumentation tasks
    tasks.withType(VerifyTask) { task ->
        task.outputs.upToDateWhen { return false }
    }

    jar {
        archiveBaseName = "csec-${archiveBaseName.getOrNull()}"
        manifest {
            attributes 'Implementation-Vendor': 'New Relic', 'Implementation-Version': project.version
        }
    }

    dependencies {
        testImplementation(project(":instrumentation-security-test"))
        testImplementation("com.newrelic.agent.java:newrelic-api:${nrAPIVersion}")
        testImplementation('com.fasterxml.jackson.core:jackson-databind:2.13.4')
    }

    test {
        jvmArgs '-javaagent:' + project.getRootProject().project("unittest-helper-agent").buildDir.getPath() + "/libs/unittest-helper-agent-1.0.jar"
    }
}

task test {
    dependsOn subprojects.collect {
        it.tasks.getByName 'test'
    }
}

def isScalaProjectEnabled(Project project, String... scalaVersions) {
    return scalaVersions.any {scalaVersion -> project.hasProperty(scalaVersion) }  ? project.tasks.all { task -> task.enabled = true }  // Enable tasks if project property matching scala version is passed
            : project.hasProperty('noInstrumentation') ? project.tasks.all { task -> task.enabled = false } // Disable tasks if project property noInstrumentation is passed
            : project.tasks.all { task -> task.enabled = task.name != "test" && task.name != "compileTestScala" ? task.enabled : task.enabled && project.hasProperty('includeScala')  }  // Default to task enabled flag
}
